{
    "max_cpu_time": 1000,
    "max_memory": 134217728,
    "src": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid merge(vector<int>& arr, int left, int mid, int right) {\n    vector<int> temp(right - left + 1);\n    int i = left, j = mid + 1, k = 0;\n    \n    while (i <= mid && j <= right) {\n        if (arr[i] <= arr[j]) {\n            temp[k++] = arr[i++];\n        } else {\n            temp[k++] = arr[j++];\n        }\n    }\n    \n    while (i <= mid) {\n        temp[k++] = arr[i++];\n    }\n    \n    while (j <= right) {\n        temp[k++] = arr[j++];\n    }\n    \n    for (int p = 0; p < k; p++) {\n        arr[left + p] = temp[p];\n    }\n}\n\nvoid mergeSort(vector<int>& arr, int left, int right) {\n    if (left < right) {\n        int mid = left + (right - left) / 2;\n        mergeSort(arr, left, mid);\n        mergeSort(arr, mid + 1, right);\n        merge(arr, left, mid, right);\n    }\n}\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n    \n    for (int i = 0; i < n; i++) {\n        cin >> arr[i];\n    }\n    \n    mergeSort(arr, 0, n-1);\n    \n    for (int i = 0; i < n; i++) {\n        cout << arr[i];\n        if (i < n-1) cout << \" \";\n    }\n    cout << endl;\n    \n    return 0;\n}\n",
    "language": "cpp",
    "test": [
        {
            "input": "100000\n42 57 83 30 38 41 10 38 89 91 64 57 31 30 38 41 16 38 99 19 17 51 65 16 42 47 74 25 48 77 19 64 98 01 42 17 84 25 08 77 54 57 31 30 88 41 06 38 99 19 42 57 83 30 88 41 16 38 99 19 17 51 65 16 42 47 74 25 48 77 19 64 98 01 42 17 84 25 08 77 54 57 31 30 88 41 06 38 99 19 17 51 65 16 42 47 74 25 08 77 /* 这里简化表示，实际需要100000个数 */",
            "output": "1 1 6 8 8 10 16 16 16 17 17 17 19 19 19 19 25 25 25 30 30 30 31 31 38 38 38 38 38 41 41 41 41 42 42 42 42 47 47 48 51 51 54 57 57 57 64 64 65 65 74 74 77 77 77 83 83 84 84 88 88 89 91 98 98 99 99 99 /* 这里简化表示，实际需要100000个数 */"
        }
    ]
}